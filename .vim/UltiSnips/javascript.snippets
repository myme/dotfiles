snippet ae "assert.equal"
assert.equals(${1:actual}, ${2:expected});
endsnippet

snippet ade "assert.deepEqual"
assert.deepEqual(${1:actual}, ${2:expected});
endsnippet

snippet etba "expect to be a"
expect(${1:actual}).to.be.a('${2:type}');
endsnippet

snippet ef "expect to be false"
expect(${1:actual}).to.be.false;
endsnippet

snippet et "expect to be true"
expect(${1:actual}).to.be.true;
endsnippet

snippet ee "expect to equal"
expect(${1:actual}).to.equal(${2:expected});
endsnippet

snippet eed "expect to deep equal"
expect(${1:actual}).to.deep.equal(${2:expected});
endsnippet

# Logger stuff

snippet logger "import and setup logger"
import log from 'log';
const logger = log.getLogger('${1:logger}');
endsnippet

snippet ld "add debug log statement"
logger.debug(${1:'${2:debug}'});
endsnippet

snippet li "add info log statement"
logger.info(${1:'${2:info}'});
endsnippet

snippet lw "add logger.warn statement"
logger.warn(${1:'${2:warn}'});
endsnippet
